#!/bin/bash

dir="$1"

# No directory has been provided, use home
if [ -z "$dir" ]
then
    dir=$HOME #or default to current dir: "`pwd`"
fi

function recursedir()
{
    # Make sure directory ends with "/"
    if [[ $1 != */ ]]
    then
        dir="$1/*"
    else
        dir="$1*"
    fi

    # Loop all sub-directories
    for f in $dir
    do
        # Only interested in directories
        [ -d "${f}" ] || continue


        # Check if directory is a git repository
        if [ -d "$f/.git" ]
        then
            echo -en "\033[0;35m"
            echo "${f}"
            echo -en "\033[0m"
            mod=0
            cd $f

            # Check for modified files
            if [ $(git status | grep modified -c) -ne 0 ]
            then
                mod=1
                echo -en "\033[0;31m"
                echo "Modified files"
                echo -en "\033[0m"
            fi

            # Check for untracked files
            if [ $(git status | grep Untracked -c) -ne 0 ]
            then
                mod=1
                echo -en "\033[0;31m"
                echo "Untracked files"
                echo -en "\033[0m"
            fi

            # Check for commits
            if [ $(git status | grep ahead -c) -ne 0 ]
            then
                mod=1
                echo -en "\033[0;31m"
                echo "Needs Push"
                echo -en "\033[0m"
                read -r -p "Do you want to push? [Y/n] " response
                if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$|^$ ]]
                then
                    $(git push)
                else
                    echo "ok"
                fi
            fi

            # Check if everything is peachy keen
            if [ $mod -eq 0 ]
            then
                echo "Nothing to commit"
            fi

            cd ../
            echo
        else
            recursedir $f
        fi
    done
}

recursedir $dir
